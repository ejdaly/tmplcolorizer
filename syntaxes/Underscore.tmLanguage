<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>tmpl</string>
		<string>html</string>
	</array>
	<key>foldingStartMarker</key>
	<string>^\{$</string>
	<key>foldingStopMarker</key>
	<string>^\}$</string>
	<key>keyEquivalent</key>
	<string>^~H</string>
	<key>name</key>
	<string>HTML (Underscore)</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#html-core</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#html-entities</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#embedded-js</string>
		</dict>
	</array>

	<key>repository</key>
	<dict>

		<!-- Core HTML Syntax: HTML Comments, Block Tags, Inline Tags, Other Tags -->
		<key>html-core</key>
		<dict>
			<key>patterns</key>
			<array>

				<!-- HTML Comments -->
				<dict>
					<key>begin</key>
					<string>&lt;!--</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>--\s*&gt;</string>
					<key>name</key>
					<string>comment.block.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>--</string>
							<key>name</key>
							<string>invalid.illegal.bad-comments-or-CDATA.html</string>
						</dict>
					</array>
				</dict>

				<!-- Block Tags -->
				<dict>
					<key>begin</key>
					<string>(&lt;/?)((?i:address|blockquote|dd|div|dl|dt|fieldset|form|frame|frameset|h1|h2|h3|h4|h5|h6|iframe|noframes|object|ol|p|ul|applet|center|dir|hr|menu|pre)\b)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.html</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.html</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.block.any.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#html-attributes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#html-strings</string>
						</dict>
					</array>
				</dict>

				<!-- Inline Tags -->
				<dict>
					<key>begin</key>
					<string>(&lt;/?)((?i:a|abbr|acronym|area|b|base|basefont|bdo|big|br|button|caption|cite|code|col|colgroup|del|dfn|em|font|head|html|i|img|input|ins|isindex|kbd|label|legend|li|link|map|meta|noscript|optgroup|option|param|q|s|samp|script|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|u|var)\b)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.html</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?: ?/)?&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.html</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.inline.any.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#html-attributes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#html-strings</string>
						</dict>
					</array>
				</dict>

				<!-- Other Tags -->
				<dict>
					<key>begin</key>
					<string>(&lt;/?)([a-zA-Z0-9:-]+)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.begin.html</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&gt;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.tag.end.html</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.tag.other.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#html-attributes</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#html-strings</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;&gt;</string>
					<key>name</key>
					<string>invalid.illegal.incomplete.html</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;</string>
					<key>name</key>
					<string>invalid.illegal.bad-angle-bracket.html</string>
				</dict>
			</array>
		</dict>

		<!-- HTML Entities: e.g. &nbsp; &gt; etc.. -->
		<key>html-entities</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.html</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.entity.html</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(&amp;)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)</string>
					<key>name</key>
					<string>constant.character.entity.html</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&amp;</string>
					<key>name</key>
					<string>invalid.illegal.bad-ampersand.html</string>
				</dict>
			</array>
		</dict>

		<!-- HTLM Attributes: e.g. id, class, data-id, ... -->
		<key>html-attributes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\s+([a-zA-Z\-:\.]+)</string>
					<key>name</key>
					<string>entity.other.attribute-name.html</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b\.([a-zA-Z_0-9\-:]+)</string>
					<key>name</key>
					<string>entity.other.tplclass.html</string>
				</dict>
			</array>
		</dict>

		<!-- HTML Strings. Single / Double quoted. These can contain embedded js. -->
		<key>html-strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.html</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#embedded-js</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#html-entities</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.html</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#embedded-js</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#html-entities</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>

		<!-- 
			Embedded JS. JS blocks are within: 
				{{...interpolate...}}
				<<...evaluate...>>
				{{- ...escaped...}} 
		-->
		<key>embedded-js</key>
		<dict>
			<key>name</key>
			<string>meta.embedded.js</string>
			<key>begin</key>
			<string>(?:\s*)(&lt;&lt;|{{[-]?)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.embedded.start.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(&gt;&gt;|}})</string>
 			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.embedded.end.js</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#javascript-core</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#javascript-strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#javascript-comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#javascript-function</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#javascript-function-call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#javascript-numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#javascript-operators</string>
				</dict>
			</array>
		</dict>

		<!-- 
			Almost all of this is copy-pasted from the TextMate definitions for JS:
			https://github.com/textmate/javascript.tmbundle/blob/master/Syntaxes/JavaScript.plist

			Some things are not included from above. E.g. for functions, we don't try to match the
			start / end of the function, because it could span 2 "evaluate" sections (and the end
			wouldn't be matched...).
		-->

		<!-- Javascript Core is the main keywords etc.. -->
		<key>javascript-core</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>=&gt;</string>
					<key>name</key>
					<string>storage.type.arrow.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(let|var)\b(?!\$)</string>
					<key>name</key>
					<string>storage.type.var.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(get|set|const)\b(?!\$)</string>
					<key>name</key>
					<string>storage.modifier.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(yield)(?!\s*:)\b(?:\s*(\*))?</string>
					<key>name</key>
					<string>meta.control.yield.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(async|await|break|case|catch|continue|default|do|else|export|finally|for|if|return|switch|throw|try|while|with)\b(?!\$)</string>
					<key>name</key>
					<string>keyword.control.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(delete|in|instanceof|new|of|typeof|void)\b(?!\$)</string>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(debugger)\b(?!\$)</string>
					<key>name</key>
					<string>keyword.other.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(Array|Boolean|Date|Error|EvalError|Function|Map|Number|Object|Promise|Proxy|RangeError|ReferenceError|Reflect|RegExp|Set|String|SyntaxError|TypeError|URIError|WeakMap|WeakSet)\b(?!\$)</string>
					<key>name</key>
					<string>support.class.js</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>DOM Core Level 4 (http://www.w3.org/TR/domcore/) and DOM Events Level 3 (http://www.w3.org/TR/DOM-Level-3-Events/)</string>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(Attr|CharacterData|Comment|CompositionEvent|CustomEvent|Document|DocumentFragment|DocumentType|DOMError|DOMException|DOMImplementation|DOMParser|DOMString|DOMTimestamp|DOMSettableTokenList|DOMStringList|DOMTokenList|Element|Event|EventTarget|FocusEvent|HTMLCollection|KeyboardEvent|MouseEvent|MutationObserver|MutationRecord|Node|NodeFilter|NodeIterator|NodeList|ProcessingInstruction|Range|Text|TextEvent|TreeWalker|UIEvent|WheelEvent|XMLDocument)\b(?!\$)</string>
					<key>name</key>
					<string>support.class.dom.js</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>DOM Core Level 4 (http://www.w3.org/TR/domcore/) and DOM Events Level 3 (http://www.w3.org/TR/DOM-Level-3-Events/)</string>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(CDATASection|DOMConfiguration|DOMErrorHandler|DOMImplementationList|DOMImplementationSource|DOMLocator|DOMObject|DOMUserData|Entity|EntityReference|MutationEvent|NamedNodeMap|NameList|Notation|TypeInfo|UserDataHandler)\b(?!\$)</string>
					<key>name</key>
					<string>invalid.deprecated.dom.js</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>TypedArray specification used by HTML 5 (http://www.khronos.org/registry/typedarray/specs/latest/)</string>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(ArrayBuffer|DataView|Float32Array|Float64Array|Int8Array|Int16Array|Int32Array|TypedArray|Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray)\b(?!\$)</string>
					<key>name</key>
					<string>support.class.dom.js</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>File specification used by HTML 5 (http://dev.w3.org/2006/webapi/FileAPI/)</string>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(Blob|File|FileList|FileReader)\b(?!\$)</string>
					<key>name</key>
					<string>support.class.dom.js</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>XMLHttpRequest specification used by HTML 5 (http://xhr.spec.whatwg.org/)</string>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(FormData|ProgressEvent|XMLHttpRequest|XMLHttpRequestUpload)\b(?!\$)</string>
					<key>name</key>
					<string>support.class.dom.js</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>EventSource specification used by HTML 5 (http://www.w3.org/TR/eventsource/)</string>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(EventSource)\b(?!\$)</string>
					<key>name</key>
					<string>support.class.dom.js</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>CSSOM specification used by HTML 5 (http://dev.w3.org/csswg/cssom/)</string>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(CSS|CSSCharsetRule|CSSImportRule|CSSPageRule|CSSRule|CSSRuleList|CSSStyleDeclaration|CSSStyleRule|CSSStyleSheet|MediaList|Stylesheet|StyleSheetList)\b(?!\$)</string>
					<key>name</key>
					<string>support.class.dom.js</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>CSSOM View specification used by HTML 5 (http://dev.w3.org/csswg/cssom-view/)</string>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(Screen)\b(?!\$)</string>
					<key>name</key>
					<string>support.class.dom.js</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>CSS Font specification used by HTML 5 (http://dev.w3.org/csswg/css-fonts/)</string>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(CSSFontFaceRule)\b(?!\$)</string>
					<key>name</key>
					<string>support.class.dom.js</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>SVG specification used by HTML 5 (http://www.w3.org/TR/SVG/single-page.html)</string>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(SVGAElement|SVGAltGlyphDefElement|SVGAltGlyphElement|SVGAltGlyphItemElement|SVGAngle|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGAnimatedAngle|SVGAnimatedBoolean|SVGAnimatedEnumeration|SVGAnimatedInteger|SVGAnimatedLength|SVGAnimatedLengthList|SVGAnimatedNumber|SVGAnimatedNumberList|SVGAnimatedPreserveAspectRatio|SVGAnimatedRect|SVGAnimatedString|SVGAnimatedTransformList|SVGAnimationElement|SVGCircleElement|SVGClipPathElement|SVGColor|SVGComponentTransferFunctionElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGDocument|SVGElement|SVGElementInstance|SVGElementInstanceList|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEConvolveMatrixElement|SVGFEDiffuseLightingElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEFloodElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGFEGaussianBlurElement|SVGFEImageElement|SVGFEMergeElement|SVGFEMergeNodeElement|SVGFEMorphologyElement|SVGFEOffsetElement|SVGFEPointLightElement|SVGFESpecularLightingElement|SVGFESpotLightElement|SVGFETileElement|SVGFETurbulenceElement|SVGFilterElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGForeignObjectElement|SVGGElement|SVGGlyphElement|SVGGlyphRefElement|SVGGradientElement|SVGHKernElement|SVGImageElement|SVGLength|SVGLengthList|SVGLineElement|SVGLinearGradientElement|SVGMPathElement|SVGMarkerElement|SVGMaskElement|SVGMatrix|SVGMetadataElement|SVGMissingGlyphElement|SVGNumber|SVGNumberList|SVGPaint|SVGPathElement|SVGPathSeg|SVGPathSegArcAbs|SVGPathSegArcRel|SVGPathSegClosePath|SVGPathSegCurvetoCubicAbs|SVGPathSegCurvetoCubicRel|SVGPathSegCurvetoCubicSmoothAbs|SVGPathSegCurvetoCubicSmoothRel|SVGPathSegCurvetoQuadraticAbs|SVGPathSegCurvetoQuadraticRel|SVGPathSegCurvetoQuadraticSmoothAbs|SVGPathSegCurvetoQuadraticSmoothRel|SVGPathSegLinetoAbs|SVGPathSegLinetoHorizontalAbs|SVGPathSegLinetoHorizontalRel|SVGPathSegLinetoRel|SVGPathSegLinetoVerticalAbs|SVGPathSegLinetoVerticalRel|SVGPathSegList|SVGPathSegMovetoAbs|SVGPathSegMovetoRel|SVGPatternElement|SVGPoint|SVGPointList|SVGPolygonElement|SVGPolylineElement|SVGPreserveAspectRatio|SVGRadialGradientElement|SVGRect|SVGRectElement|SVGRenderingIntent|SVGSVGElement|SVGScriptElement|SVGSetElement|SVGStopElement|SVGStringList|SVGStyleElement|SVGSwitchElement|SVGSymbolElement|SVGTRefElement|SVGTSpanElement|SVGTextContentElement|SVGTextElement|SVGTextPathElement|SVGTextPositioningElement|SVGTitleElement|SVGTransform|SVGTransformList|SVGUnitTypes|SVGUseElement|SVGUseElement|SVGVKernElement|SVGViewElement|SVGViewSpec|SVGZoomEvent)\b(?!\$)</string>
					<key>name</key>
					<string>support.class.dom.js</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>WebGL specification used by HTML 5 (http://www.khronos.org/registry/webgl/specs/latest/1.0/)</string>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(WebGLActiveInfo|WebGLBuffer|WebGLContextEvent|WebGLFramebuffer|WebGLProgram|WebGLRenderbuffer|WebGLRenderingContext|WebGLShader|WebGLShaderPrecisionFormat|WebGLTexture|WebGLUniformLocation)\b(?!\$)</string>
					<key>name</key>
					<string>support.class.dom.js</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>HTML 5 (http://www.w3.org/TR/html5/single-page.html)</string>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(Audio|BarProp|DOMStringMap|ErrorEvent|FileError|HTMLAllCollection|HTMLAnchorElement|HTMLAppletElement|HTMLAreaElement|HTMLAudioElement|HTMLBRElement|HTMLBaseElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLDListElement|HTMLDataElement|HTMLDataListElement|HTMLDetailsElement|HTMLDialogElement|HTMLDirectoryElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormControlsCollection|HTMLFormElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMarqueeElement|HTMLMediaElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOptionsCollection|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLSour|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableDataCellElement|HTMLTableElement|HTMLTableHeaderCellElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTimeElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement|HTMLVideoElement|HashChangeEvent|History|Image|Location|MediaController|MediaError|MouseEvent|Navigator|Option|PageTransitionEvent|PopStateEvent|TextTrack|TextTrackCue|TextTrackCueList|TextTrackList|TimeRanges|TrackEvent|UIEvent|ValidityState|Window)\b(?!\$)</string>
					<key>name</key>
					<string>support.class.dom.js</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>HTML 5 (http://www.w3.org/TR/html5/single-page.html#window)</string>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(applicationCache|closed|console|crypto|document|external|frameElement|frames|history|innerHeight|innerWidth|length|location|locationbar|menubar|name|navigator|offscreenBuffering|onabort|onafterprint|onbeforeprint|onbeforeunload|onblur|oncancel|oncanplay|oncanplaythrough|onchange|onclick|onclose|oncuechange|ondblclick|ondrag|ondragend|ondragenter|ondragexit|ondragleave|ondragover|ondragstart|ondrop|ondurationchange|onemptied|onended|onerror|onfocus|onhashchange|oninput|oninvalid|onkeydown|onkeypress|onkeyup|onload|onloadeddata|onloadedmetadata|onloadstart|onmessage|onmousedown|onmouseenter|onmouseleave|onmousemove|onmouseout|onmouseover|onmouseup|onmousewheel|onoffline|ononline|onpagehide|onpageshow|onpause|onplay|onplaying|onpopstate|onprogress|onratechange|onreset|onresize|onscroll|onseeked|onseeking|onselect|onshow|onstalled|onstorage|onsubmit|onsuspend|ontimeupdate|onunload|onvolumechange|onwaiting|opener|outerHeight|outerWidth|pageXOffset|pageYOffset|parent|personalbar|postMessage|screen|screenX|screenY|scrollbars|scrollX|scrollY|self|status|statusbar|toolbar|top|window)\b(?!\$)</string>
					<key>name</key>
					<string>support.constant.dom.js</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>HTML 5 (http://www.w3.org/TR/html5/single-page.html#window)</string>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(addEventListener|alert|atob|blur|btoa|clearInterval|clearTimeout|close|confirm|dispatchEvent|doNotTrack|find|focus|getComputedStyle|getMatchedCSSRules|getSelection|matchMedia|moveBy|moveTo|open|openDatabase|print|prompt|removeEventListener|resizeBy|resizeTo|scroll|scrollBy|scrollTo|setInterval|setTimeout|showModalDialog|stop)\b(?!\$)</string>
					<key>name</key>
					<string>support.function.dom.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(captureEvents|defaultStatus|defaultstatus|releaseEvents)\b(?!\$)</string>
					<key>name</key>
					<string>invalid.deprecated.dom.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(JSON|Math)\b(?!\$)</string>
					<key>name</key>
					<string>support.constant.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|isNaN|parseFloat|parseInt|uneval)\b(?!\$)</string>
					<key>name</key>
					<string>support.function.js</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Keywords reserved for future use but now are unused.</string>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(enum|await)\b(?!\$)</string>
					<key>name</key>
					<string>invalid.illegal.js</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Keywords reserved for future use in strict mode but now are unused.</string>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(implements|interface|package|private|protected|public)\b(?!\$)</string>
					<key>name</key>
					<string>invalid.deprecated.js</string>
				</dict>
				<!-- <dict>
					<key>comment</key>
					<string>Keywords used in an invalid context</string>
					<key>match</key>
					<string>(?&lt;!\.|\$)\b(class|function|static|extends)\b(?!\$)</string>
					<key>name</key>
					<string>invalid.illegal.js</string>
				</dict> -->
				<dict>
					<key>match</key>
					<string>\b(false|Infinity|NaN|null|true|undefined)\b</string>
					<key>name</key>
					<string>constant.language.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\.)\b(super|this)(?!\s*:)\b</string>
					<key>name</key>
					<string>variable.language.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\;</string>
					<key>name</key>
					<string>punctuation.terminator.statement.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\[|\]</string>
					<key>name</key>
					<string>meta.brace.square.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\(|\)</string>
					<key>name</key>
					<string>meta.brace.round.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[{}]</string>
					<key>name</key>
					<string>meta.brace.curly.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.</string>
					<key>name</key>
					<string>punctuation.period.js</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Match classes based on the usage of the "new" operator.</string>
					<key>match</key>
					<string>(?&lt;=new )([\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*)(?!\w)</string>
					<key>name</key>
					<string>support.class.js</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Match classes based on the usage of the "instanceof" operator.</string>
					<key>match</key>
					<string>(?&lt;= instanceof )([\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*)(?!\w)</string>
					<key>name</key>
					<string>support.class.js</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Match classes based on the usage of the "prototype" property.</string>
					<key>match</key>
					<string>(?&lt;!\w)([\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*)(?=\.prototype\b)</string>
					<key>name</key>
					<string>support.class.js</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Matches the "prototype" keyword.  Even though it is not a valid keyword, it is a special constant of sorts.</string>
					<key>match</key>
					<string>(?&lt;=\.)(prototype)\b</string>
					<key>name</key>
					<string>keyword.other.js</string>
				</dict>

				<dict>
					<key>match</key>
					<string>(?&lt;!\w)[\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*(?=\s*:\s*function\b)</string>
					<key>name</key>
					<string>entity.name.function.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\w)[\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*(?=\s*:)</string>
					<key>name</key>
					<string>entity.name.type.attribute-name.js</string>
				</dict>
			</array>
		</dict>

		<!-- Javascript Comments -->
		<key>javascript-comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*\*(?!/|\*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.documentation.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?&lt;!\w)@(abstract|access|alias|arg|argument|async|attribute|augments|author|beta|borrows|bubbes|callback|chainable|class|classdesc|code|config|const|constant|constructor|constructs|copyright|default|defaultvalue|define|deprecated|desc|description|dict|emits|enum|event|example|exports?|extends|extension|extension_for|extensionfor|external|file|fileoverview|final|fires|for|function|global|host|ignore|implements|inherit[Dd]oc|inner|instance|interface|kind|lends|license|listens|main|member|memberof|method|mixex|mixins?|module|name|namespace|nocollapse|nosideeffects|override|overview|package|param|preserve|private|prop|property|protected|public|read[Oo]nly|record|require[ds]|returns?|see|since|static|struct|submodule|summary|template|this|throws|todo|tutorial|type|typedef|unrestricted|uses|var|variation|version|virtual|writeOnce)\b</string>
							<key>name</key>
							<string>keyword.other.documentation.js.jsdoc</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.js</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(^[ \t]+)?(?=//)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.comment.leading.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>//</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.js</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\n</string>
							<key>name</key>
							<string>comment.line.double-slash.js</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>

		<!-- This is a function definition, e.g.:
			var x = function(a) {...} -->
		<key>javascript-function</key>
		<dict>
			<key>begin</key>
			<string>(?x)
			(?:
				(?&lt;!\w)																		# Ensure word boundry
				([\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*)	# Identifier
				\s*(=)\s*
			)?																				# Optional
			\b(function)
			(?:\s*
				(\*)																		# Optional generator notation
			)?																				# (ECMAScript 6)
			(?:\s*
				(?&lt;=[\s\*])
				([\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*)	# Optional Name
			)?
			\s*(\()
			</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.function.variable.js</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.js</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.js</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.js</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.js</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.js</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Match function, optional function name and optional function arguments</string>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.js</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#javascript-function-params</string>
				</dict>
			</array>
		</dict>

		<!-- 
			A function call.
			As mentioned above, we just match the function name (string + round opening bracket), but not
			a "begin" / "end".
		-->
		<key>javascript-function-call</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;!\w)([\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*)(\()</string>
					<key>name</key>
					<string>meta.function-call.js</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.function-call.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.function-call.begin.js</string>
						</dict>
					</dict>
				</dict>
			</array>
		</dict>

		<!-- 
			Function params, e.g. (a,b).
			This is only used for function definition (not function call - for same reasons that
			function call is simpler than complete TM definition).
		-->
		<key>javascript-function-params</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[\p{L}\p{Nl}$_])|(\.\.\.)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.rest-parameters.js</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Matches valid argument, function and variable names.  To be thorough: https://github.com/mathiasbynens/mothereff.in/tree/master/js-variables</string>
					<key>end</key>
					<string>(?=[,)/])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\G[\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*</string>
							<key>name</key>
							<string>variable.parameter.function.js</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#javascript-function-call</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#javascript-numbers</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#javascript-strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#javascript-comments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#javascript-operators</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?&lt;!\.)\b(super|this)(?!\s*:)\b</string>
							<key>name</key>
							<string>variable.language.js</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#javascript-comments</string>
				</dict>
			</array>
		</dict>

		<!-- Numbers -->
		<key>javascript-numbers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&lt;!\w|\$)0[xX]\h+\b</string>
					<key>name</key>
					<string>constant.numeric.hex.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\w|\$)0[bB][01]+\b</string>
					<key>name</key>
					<string>constant.numeric.binary.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;!\w|\$)0[oO][0-7]+\b</string>
					<key>name</key>
					<string>constant.numeric.octal.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
        				(?&lt;!\w|\$)							    # Ensure word boundry
                        [+-]?                                   # Optional sign
        				(?&gt;
        					(
        						(0|[1-9][0-9]*)(\.[0-9]*)?		# 0 or 1 or 1. or 1.0
        					  | \.[0-9]+						# .1
        					)
        					([eE][+-]?[0-9]+)?					# Exponent
        				)
        				(?!\w)									# Ensure word boundry
        			</string>
					<key>name</key>
					<string>constant.numeric.js</string>
				</dict>
			</array>
		</dict>

		<!-- Operators: logical, comparison etc... -->
		<key>javascript-operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>%=|\+=|\-=|\*=|(?&lt;!\()/=</string>
					<key>name</key>
					<string>keyword.operator.assignment.compound.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&amp;=|\^=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|\|=</string>
					<key>name</key>
					<string>keyword.operator.assignment.compound.bitwise.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>!==|!=|&lt;=|&gt;=|===|==|&lt;|&gt;</string>
					<key>name</key>
					<string>keyword.operator.comparison.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&amp;&amp;|!|\|\|</string>
					<key>name</key>
					<string>keyword.operator.logical.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&amp;|\||\^|~</string>
					<key>name</key>
					<string>keyword.operator.bitwise.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\:</string>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>!</string>
					<key>name</key>
					<string>keyword.operator.logical.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\?</string>
					<key>name</key>
					<string>keyword.operator.ternary.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>=|\:</string>
					<key>name</key>
					<string>keyword.operator.assignment.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\-\-</string>
					<key>name</key>
					<string>keyword.operator.decrement.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\+\+</string>
					<key>name</key>
					<string>keyword.operator.increment.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>%|\*|/|\-|\+</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.\.\.</string>
					<key>name</key>
					<string>keyword.operator.spread.js</string>
				</dict>
			</array>
		</dict>

		<!-- 
			Javscript strings
			Backticks are included here, and formatted as strings, but the interpolation syntax parsing
			(e.g. ${x} is disabled)
		-->
		<key>javascript-strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#javascript-escapes</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\\n</string>
							<key>name</key>
							<string>constant.character.escape.newline.js</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\n</string>
							<key>name</key>
							<string>invalid.illegal.character-not-allowed-here.js</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#javascript-escapes</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\\n</string>
							<key>name</key>
							<string>constant.character.escape.newline.js</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\n</string>
							<key>name</key>
							<string>invalid.illegal.character-not-allowed-here.js</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>`</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>`</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.other.template.js</string>
					<key>patterns</key>
					<array>
 						<dict>
							<key>include</key>
							<string>#javascript-escapes</string>
						</dict>
					</array>
				</dict>
			</array>
			<key>repository</key>
			<dict>

				<!-- These are string escape sequences, e.g. \n -->
				<key>javascript-escapes</key>
				<dict>
					<key>match</key>
					<string>\\(x\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)</string>
					<key>name</key>
					<string>constant.character.escape.js</string>
				</dict>
			</dict>
		</dict>

	</dict>
	<key>scopeName</key>
	<string>text.html.underscore</string>
	<key>uuid</key>
	<string>88A67AD4-1C2B-494F-B4FF-0B69BE57BD2B</string>
</dict>
</plist>